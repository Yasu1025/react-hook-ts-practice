[{"/Users/KitasakaYasuhiro/Documents/github/react-hook-ts-practice/src/index.tsx":"1","/Users/KitasakaYasuhiro/Documents/github/react-hook-ts-practice/src/serviceWorker.ts":"2","/Users/KitasakaYasuhiro/Documents/github/react-hook-ts-practice/src/app/store.ts":"3","/Users/KitasakaYasuhiro/Documents/github/react-hook-ts-practice/src/App.tsx":"4","/Users/KitasakaYasuhiro/Documents/github/react-hook-ts-practice/src/features/counter/counterSlice.ts":"5","/Users/KitasakaYasuhiro/Documents/github/react-hook-ts-practice/src/features/counter/Counter.tsx":"6","/Users/KitasakaYasuhiro/Documents/github/react-hook-ts-practice/src/Clearnup.tsx":"7"},{"size":648,"mtime":1610777469000,"results":"8","hashOfConfig":"9"},{"size":5424,"mtime":1610777469000,"results":"10","hashOfConfig":"9"},{"size":414,"mtime":1610777469000,"results":"11","hashOfConfig":"9"},{"size":1474,"mtime":1610777977000,"results":"12","hashOfConfig":"9"},{"size":1851,"mtime":1610777469000,"results":"13","hashOfConfig":"9"},{"size":1626,"mtime":1610557251000,"results":"14","hashOfConfig":"9"},{"size":636,"mtime":1610778143000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"258msk",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/KitasakaYasuhiro/Documents/github/react-hook-ts-practice/src/index.tsx",[],"/Users/KitasakaYasuhiro/Documents/github/react-hook-ts-practice/src/serviceWorker.ts",[],"/Users/KitasakaYasuhiro/Documents/github/react-hook-ts-practice/src/app/store.ts",[],"/Users/KitasakaYasuhiro/Documents/github/react-hook-ts-practice/src/App.tsx",["32"],"import React, { useState, useEffect } from 'react';\r\nimport { Counter } from './features/counter/Counter';\r\nimport './App.css';\r\nimport Clearnup from './Clearnup';\r\n\r\nconst App = () => {\r\n  const [ status, setStatus ] = useState<string>('text');\r\n  const [ input, setInput ] = useState('');\r\n  const [ counter, setCounter ] = useState(0);\r\n  const [ display, setDisplay ] = useState(true);\r\n\r\n  const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInput(e.target.value);\r\n  }\r\n  const incrementHandler = () => {\r\n    setCounter((preCounter: number) => preCounter + 1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect has been invoked!!')\r\n    console.log(`counter is ${counter}`)\r\n  }, [counter])\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h4>{ status }</h4>\r\n        <button onClick={ () => setStatus('text has been changed')}>Button</button>\r\n        <hr/>\r\n        <h4>{ input }</h4>\r\n        <input type=\"text\" value={ input } onChange={ onChangeHandler } />\r\n        <hr/>\r\n        <h4>{ counter }</h4>\r\n        <button onClick={ incrementHandler }>Increment</button>\r\n        <p>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <hr/>\r\n        {\r\n          display && <Clearnup/>\r\n        }\r\n        <button onClick={ () => setDisplay(!display)}>Toggle Display</button>\r\n        \r\n        \r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["33","34"],"/Users/KitasakaYasuhiro/Documents/github/react-hook-ts-practice/src/features/counter/counterSlice.ts",[],"/Users/KitasakaYasuhiro/Documents/github/react-hook-ts-practice/src/features/counter/Counter.tsx",[],"/Users/KitasakaYasuhiro/Documents/github/react-hook-ts-practice/src/Clearnup.tsx",[],{"ruleId":"35","severity":1,"message":"36","line":2,"column":10,"nodeType":"37","messageId":"38","endLine":2,"endColumn":17},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},"@typescript-eslint/no-unused-vars","'Counter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-global-assign","no-unsafe-negation"]